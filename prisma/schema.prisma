// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Product       Product[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum ProductStatus {
  DRAFT
  PUBLISHED
  REJECTED
}

enum ProductPricing {
  FREE
  PAID
  FREEMIUM
}

model Product {
  id            String         @id @default(cuid())
  slug          String         @unique
  name          String
  tagline       String?
  description   String?        @db.Text
  motivation    String?        @db.Text
  logo          String?
  website       String?
  twitter       String?
  github        String?
  instagram     String?
  facebook      String?
  startDate     DateTime?      @db.Date
  endDate       DateTime?      @db.Date
  location      String?
  pricing       ProductPricing @default(FREE)
  startingPrice Int?
  status        ProductStatus  @default(DRAFT)
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}
